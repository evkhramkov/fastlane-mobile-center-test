# load variables from .env file if it exists
if File.exist?('../.env')
  open('../.env', 'r').readlines.each do |l|
    kv = l.split('=')
    ENV[kv[0]] = kv[1].chomp
  end
end

lane :test do
  Actions.lane_context[SharedValues::FL_CHANGELOG] = 'shared changelog'

  UI.message("\n\n\n=====================================\n uploading android\n=====================================")

  mobile_center_upload(
    api_token: ENV["TEST_MOBILE_CENTER_API_TOKEN"],
    owner_name: ENV["TEST_MOBILE_CENTER_OWNER_NAME"],
    app_name: "MyApplication",
    file: "./fastlane/app-release.apk",
    group: ENV["TEST_MOBILE_CENTER_DISTRIBUTE_GROUP"],
    release_notes: ENV["TEST_MOBILE_CENTER_DISTRIBUTE_RELEASE_NOTES"]
  )

  UI.message("\n\n\n=====================================\n uploading ios with dSYM files (not zipped) \n=====================================")

  mobile_center_upload(
    api_token: ENV["TEST_MOBILE_CENTER_API_TOKEN"],
    owner_name: ENV["TEST_MOBILE_CENTER_OWNER_NAME"],
    app_name: "MyApplication-01",
    file: "./fastlane/app-release.ipa",
    group: ENV["TEST_MOBILE_CENTER_DISTRIBUTE_GROUP"],
    dsym: "./fastlane/Themoji.dSYM",
    release_notes: ENV["TEST_MOBILE_CENTER_DISTRIBUTE_RELEASE_NOTES"]
  )

  UI.message("\n\n\n=====================================\n uploading only dSYM files (not zipped) \n=====================================")

  mobile_center_upload(
    api_token: ENV["TEST_MOBILE_CENTER_API_TOKEN"],
    owner_name: ENV["TEST_MOBILE_CENTER_OWNER_NAME"],
    app_name: "MyApplication-01",
    upload_dsym_only: true,
    dsym: "./fastlane/Themoji.dSYM",
    release_notes: ENV["TEST_MOBILE_CENTER_DISTRIBUTE_RELEASE_NOTES"]
  )

  UI.message("\n\n\n=====================================\n showing uploaded dSYM files \n=====================================")
  require 'faraday'
  connection = Faraday.new(url: 'https://api.mobile.azure.com') do |builder|
    builder.request :json
    builder.response :json, content_type: /\bjson$/
    builder.adapter :net_http
  end

  response = connection.get do |req|
    req.url("/v0.1/apps/#{ENV['TEST_MOBILE_CENTER_OWNER_NAME']}/MyApplication-01/symbol_uploads")
    req.headers['X-API-Token'] = ENV['TEST_MOBILE_CENTER_API_TOKEN']
  end

  UI.message("\n#{Terminal::Table.new(rows: response.body.map!(&:values),
                                      headings: %w[symbol_upload_id app_id origin status symbol_type])}")

  # use it for deleting all dSYM uploads
  # response.body.map! do |item|
  #   connection.delete do |req|
  #     req.url("/v0.1/apps/#{ENV['TEST_MOBILE_CENTER_OWNER_NAME']}/MyApplication-01/symbol_uploads/#{item[0]}")
  #     req.headers['X-API-Token'] = ENV['TEST_MOBILE_CENTER_API_TOKEN']
  #   end
  # end

  UI.message("\n\n\n=====================================\n testing shared values\n=====================================")
  UI.message("MOBILE_CENTER_DOWNLOAD_LINK = #{Actions.lane_context[SharedValues::MOBILE_CENTER_DOWNLOAD_LINK]}")
  UI.message("MOBILE_CENTER_BUILD_INFORMATION = #{JSON.pretty_generate(Actions.lane_context[SharedValues::MOBILE_CENTER_BUILD_INFORMATION])}")
end
